# Setttings based on the server name
# Defaults are geared towards a single instance with auth.
# If you are going to run a cluster then turn on features
# as needed using pillars or edit here.
{% set default_config = salt['grains.filter_by']({
  'default':
  {
    'mongodb':
    {
      'is_master': 'false',
      'is_arbiter': 'false',
      'restart_service_after_state_change': 'true',
      'systemlog_destination': 'file',
      'systemlog_logappend': 'true',
      'systemlog_path': '/var/log/mongodb/mongod.log',
      'storage_dbpath': '/var/lib/mongo',
      'storage_journal_enabled': 'true',
      'process_pidfilepath': '/var/run/mongodb',
      'use_security_auth': 'true',
      'security_auth': 'enabled',
      'use_external_net': 'false',
      'external_net_bindip': '',
      'local_net_bindip': '127.0.0.1',
      'net_port': '27017',
      'use_replica_set': 'false',
      'security_keyfile': '/etc/mongodb_key',
      'replication_replsetname': 'rs0',
      'replication_oplogsizemb': '2048',
      'use_keyfile': 'false',
      'sources': [],
    },
  },
  'mongo00':
  {
    'mongodb':
    {
      'is_master': 'true',
      'use_external_net': 'false',
      'external_net_bindip': '{{ grains.fqdn_ip4[0] }}',
      'sources': 
      [{
        'name': 'mongo00',
        'master': 'true',
        'arbiter': 'false',
        'fqdn': 'mongo00.alias454.local',
        'ip': '192.168.2.20',
        'mask': '/32',
        'port': '27017'
      },]
    },
  },
}, grain='host', base='default') %}

# Configure firewall settings specific for this instance
{% set os_lookup = {
  'RedHat':
  {
    'firewall':
    {
      'firewall_include': 'mongo-firewalld',
      'firewalld':
      {
        'status': salt['pillar.get']('firewall:firewalld:status', 'InActive')
      }
    }
  },
  'Debian':
  {
    'firewall':
    {
      'firewall_include': 'mongo-iptables',
      'iptables':
      {
        'status': salt['pillar.get']('firewall:iptables:status', 'InActive')
      }
    }
  }
} %}
{% set firewall = os_lookup.get(grains.os_family, {}) %} 

# Get settings for os_family
{% set os_lookup = {
  'RedHat':
  {
    'package':
    {
      'mongo_user': 'mongod',
      'mongo_group': 'mongod',
      'repo_version': '3.4',
      'repo_baseurl': 'https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/',
      'repo_gpgkey': 'https://www.mongodb.org/static/pgp/server-3.4.asc'
    }
  },
  'Debian':
  {
    'package':
    {
      'mongo_user': 'mongodb',
      'mongo_group': 'mongodb',
      'repo_version': '3.4',
      'repo_baseurl': 'deb http://repo.mongodb.org/apt/debian stretch/mongodb-org/3.4 main',
      'repo_keyserver': 'keyserver.ubuntu.com',
      'repo_key': '0C49F3730359A14518585931BC711F9BA15703C6'
    }
  }
} %}
{% set os_map = os_lookup.get(grains.os_family, {}) %} 

# Update the default config 
{% do default_config.update(firewall) %}
{% do default_config.update(os_map) %}

# Merge the default settings with pillar data
{% set host_lookup = salt['pillar.get']('mongodb:lookup', default=default_config, merge=True) %}
